{"version":3,"file":null,"sources":["../src/zooming.js","../src/_helpers.js","../src/_options.js","../src/_style.js","../src/_trans.js","../src/_touch.js"],"sourcesContent":["import style from './_style'\nimport defaultOptions from './_options'\nimport { loadImage, scrollTop, getWindowCenter, toggleListeners } from './_helpers'\nimport { sniffTransition, checkTrans, calculateTranslate, calculateScale } from './_trans'\nimport { processTouches } from './_touch'\n\nconst PRESS_DELAY = 200\nconst EVENT_TYPES_GRAB = [\n  'mousedown', 'mousemove', 'mouseup',\n  'touchstart', 'touchmove', 'touchend'\n]\n\nfunction Zooming (options = defaultOptions) {\n  this.options = Object.assign({}, options)\n\n  // elements\n  this.body = document.body\n  this.overlay = document.createElement('div')\n  this.target = null\n  this.parent = null\n\n  // state\n  this.shown = false       // target is open\n  this.lock  = false       // target is in transform\n  this.released = true     // mouse/finger is not pressing down\n  this.lastScrollPosition = null\n  this.translate = null\n  this.scale = null\n  this.srcThumbnail = null\n  this.pressTimer = null\n\n  const trans = sniffTransition(this.overlay)\n  const setStyleHelper = checkTrans(trans.transitionProp, trans.transformProp)\n  this.transformCssProp = trans.transformCssProp\n  this.transEndEvent = trans.transEndEvent\n  this.setStyle = (el, styles, remember) => {\n    return setStyleHelper(el, styles, remember)\n  }\n\n  this.eventHandler = this.eventHandler()\n\n  // init overlay\n  this.setStyle(this.overlay, style.overlay.init)\n  this.overlay.addEventListener('click', () => this.close())\n}\n\nZooming.prototype = {\n\n  eventHandler: function () {\n    const handler = {\n      click: function (e) {\n        e.preventDefault()\n\n        if (this.shown) {\n          if (this.released) this.close()\n          else this.release()\n        } else {\n          this.open(e.currentTarget)\n        }\n      },\n\n      scroll: function () {\n        const st = scrollTop()\n\n        if (this.lastScrollPosition === null) {\n          this.lastScrollPosition = st\n        }\n\n        const deltaY = this.lastScrollPosition - st\n\n        if (Math.abs(deltaY) >= this.options.scrollThreshold) {\n          this.lastScrollPosition = null\n          this.close()\n        }\n      },\n\n      keydown: function (e) {\n        const code = e.key || e.code\n        if (code === 'Escape' || e.keyCode === 27) {\n          if (this.released) this.close()\n          else this.release(() => this.close())\n        }\n      },\n\n      mousedown: function (e) {\n        if (e.button !== 0) return\n        e.preventDefault()\n\n        this.pressTimer = setTimeout(() => {\n          this.grab(e.clientX, e.clientY)\n        }, PRESS_DELAY)\n      },\n\n      mousemove: function (e) {\n        if (this.released) return\n        this.move(e.clientX, e.clientY)\n      },\n\n      mouseup: function (e) {\n        if (e.button !== 0) return\n        clearTimeout(this.pressTimer)\n\n        if (this.released) this.close()\n        else this.release()\n      },\n\n      touchstart: function (e) {\n        e.preventDefault()\n\n        this.pressTimer = setTimeout(() => {\n          processTouches(e.touches, (x, y, scaleExtra) => {\n            this.grab(x, y, scaleExtra)\n          })\n        }, PRESS_DELAY)\n      },\n\n      touchmove: function (e) {\n        if (this.released) return\n\n        processTouches(e.touches, (x, y, scaleExtra) => {\n          this.move(x, y, scaleExtra)\n        })\n      },\n\n      touchend: function (e) {\n        if (e.targetTouches.length > 0) return\n        clearTimeout(this.pressTimer)\n\n        if (this.released) this.close()\n        else this.release()\n      }\n    }\n\n    for (let fn in handler) {\n      handler[fn] = handler[fn].bind(this)\n    }\n\n    return handler\n  },\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen: function (el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el), i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = style.cursor.zoomIn\n\n    el.addEventListener('click', this.eventHandler.click)\n\n    if (this.options.preloadImage && el.hasAttribute('data-original')) {\n      loadImage(el.getAttribute('data-original'))\n    }\n\n    return this\n  },\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will be\n   * called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open: function (el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    this.target = typeof el === 'string'\n      ? document.querySelector(el)\n      : el\n\n    if (this.target.tagName !== 'IMG') return\n\n    // onBeforeOpen event\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(this.target)\n\n    this.shown = true\n    this.lock = true\n    this.parent = this.target.parentNode\n\n    // load hi-res image if preloadImage option is disabled\n    if (!this.options.preloadImage && this.target.hasAttribute('data-original')) {\n      loadImage(this.target.getAttribute('data-original'))\n    }\n\n    const rect = this.target.getBoundingClientRect()\n    this.translate = calculateTranslate(rect)\n    this.scale = calculateScale(rect, this.options.scaleBase)\n\n    // force layout update\n    this.target.offsetWidth\n\n    style.target.open = {\n      position: 'relative',\n      zIndex: 999,\n      cursor: this.options.enableGrab ? style.cursor.grab : style.cursor.zoomOut,\n      transition: `${this.transformCssProp}\n        ${this.options.transitionDuration}s\n        ${this.options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px) scale(${this.scale})`\n    }\n\n    // trigger transition\n    style.target.close = this.setStyle(this.target, style.target.open, true)\n\n    // insert this.overlay\n    this.parent.appendChild(this.overlay)\n    setTimeout(() => this.overlay.style.opacity = this.options.bgOpacity, 30)\n\n    document.addEventListener('scroll', this.eventHandler.scroll)\n    document.addEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleListeners(document, EVENT_TYPES_GRAB, this.eventHandler, true)\n      }\n\n      if (this.target.hasAttribute('data-original')) {\n        this.srcThumbnail = this.target.getAttribute('src')\n        const dataOriginal = this.target.getAttribute('data-original')\n        const temp = this.target.cloneNode(false)\n\n        // force compute the hi-res image in DOM to prevent\n        // image flickering while updating src\n        temp.setAttribute('src', dataOriginal)\n        temp.style.position = 'absolute'\n        temp.style.visibility = 'hidden'\n        this.body.appendChild(temp)\n\n        setTimeout(() => {\n          this.target.setAttribute('src', dataOriginal)\n          this.body.removeChild(temp)\n        }, 10)\n      }\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will be\n   * called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close: function (cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeClose event\n    if (this.options.onBeforeClose) this.options.onBeforeClose(this.target)\n\n    this.lock = true\n\n    // force layout update\n    this.target.offsetWidth\n\n    this.body.style.cursor = style.cursor.default\n    this.overlay.style.opacity = 0\n    this.setStyle(this.target, { transform: 'none' })\n\n    document.removeEventListener('scroll', this.eventHandler.scroll)\n    document.removeEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n\n      this.shown = false\n      this.lock = false\n\n      if (this.options.enableGrab) {\n        toggleListeners(document, EVENT_TYPES_GRAB, this.eventHandler, false)\n      }\n\n      if (this.target.hasAttribute('data-original')) {\n        // downgrade source\n        this.target.setAttribute('src', this.srcThumbnail)\n      }\n\n      // trigger transition\n      this.setStyle(this.target, style.target.close)\n\n      // remove overlay\n      this.parent.removeChild(this.overlay)\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that will be\n   * called when a target is grabbed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  grab: function (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeGrab event\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(this.target)\n\n    this.released = false\n\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    this.setStyle(this.target, {\n      cursor: style.cursor.move,\n      transform: `translate(${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale + scaleExtra})`\n    })\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n  },\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that will be\n   * called when a target is moved and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  move: function (x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeMove event\n    if (this.options.onBeforeMove) this.options.onBeforeMove(this.target)\n\n    this.released = false\n\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    this.setStyle(this.target, {\n      transition: this.transformCssProp,\n      transform: `translate(${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale + scaleExtra})`\n    })\n\n    this.body.style.cursor = style.cursor.move\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n  },\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that will be\n   * called when a target is released and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  release: function (cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    // onBeforeRelease event\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(this.target)\n\n    this.lock = true\n\n    this.setStyle(this.target, style.target.open)\n    this.body.style.cursor = style.cursor.default\n\n    const onEnd = () => {\n      this.target.removeEventListener(this.transEndEvent, onEnd)\n\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(this.target)\n    }\n\n    this.target.addEventListener(this.transEndEvent, onEnd)\n\n    return this\n  },\n\n  /**\n   * Update this.options.\n   * @param  {Object} opts An Object that contains this.options.\n   * @return {this}\n   */\n  config: function (opts) {\n    if (!opts) return this.options\n\n    for (let key in opts) {\n      this.options[key] = opts[key]\n    }\n\n    this.setStyle(this.overlay, {\n      backgroundColor: this.options.bgColor,\n      transition: `opacity\n        ${this.options.transitionDuration}s\n        ${this.options.transitionTimingFunction}`\n    })\n\n    return this\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Zooming().listen(defaultOptions.defaultZoomable)\n})\n\nexport default Zooming\n","const body = document.body\nconst docElm = document.documentElement\nconst webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\nconst divide = (denominator) => {\n  return (numerator) => {\n    return numerator / denominator\n  }\n}\n\nconst half = divide(2)\n\nconst loadImage = (url, cb) => {\n  const img = new Image()\n  img.onload = () => {\n    if (cb) cb(img)\n  }\n  img.src = url\n}\n\nconst scrollTop = () => {\n  return window.pageYOffset ||\n    (docElm || body.parentNode || body).scrollTop\n}\n\nconst getWindowCenter = () => {\n  const docWidth = docElm.clientWidth || body.clientWidth\n  const docHeight = docElm.clientHeight || body.clientHeight\n\n  return {\n    x: half(docWidth),\n    y: half(docHeight)\n  }\n}\n\nconst toggleListeners = (el, types, handler, add = true) => {\n  types.forEach(t => {\n    if (add) {\n      el.addEventListener(t, handler[t])\n    } else {\n      el.removeEventListener(t, handler[t])\n    }\n  })\n}\n\nexport {\n  webkitPrefix,\n  half,\n  loadImage,\n  scrollTop,\n  getWindowCenter,\n  toggleListeners\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: true,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeMove: null,\n *   onBeforeRelease: null\n * }\n */\nexport default {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload images with attribute \"data-original\".\n   * @type {boolean}\n   */\n  preloadImage: true,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before move.\n   * @type {Function}\n   */\n  onBeforeMove: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n","import { webkitPrefix } from './_helpers'\nimport options from './_options'\n\nexport default {\n  target: {\n    close: null,\n    open: null,\n  },\n  overlay: {\n    init: {\n      zIndex: 998,\n      backgroundColor: options.bgColor,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    }\n  },\n  cursor: {\n    default: 'auto',\n    zoomIn: `${webkitPrefix}zoom-in`,\n    zoomOut: `${webkitPrefix}zoom-out`,\n    grab: `${webkitPrefix}grab`,\n    move: 'move'\n  }\n}\n","import { half, getWindowCenter } from './_helpers'\n\nconst sniffTransition = (el) => {\n  let ret     = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end   = {\n    'transition'       : 'transitionend',\n    'mozTransition'    : 'transitionend',\n    'webkitTransition' : 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n\nconst checkTrans = (transitionProp, transformProp) => {\n  return function setStyle(el, styles, remember) {\n    let value\n    if (styles.transition) {\n      value = styles.transition\n      delete styles.transition\n      styles[transitionProp] = value\n    }\n    if (styles.transform) {\n      value = styles.transform\n      delete styles.transform\n      styles[transformProp] = value\n    }\n\n    let s = el.style\n    let original = {}\n\n    for (let key in styles) {\n      if (remember) original[key] = s[key] || ''\n      s[key] = styles[key]\n    }\n\n    return original\n  }\n}\n\nconst calculateTranslate = (rect) => {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + half(rect.width),\n    y: rect.top + half(rect.height)\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nconst calculateScale = (rect, scaleBase) => {\n  const windowCenter = getWindowCenter()\n  const targetHalfWidth = half(rect.width)\n  const targetHalfHeight = half(rect.height)\n\n  // The distance between target edge and window edge\n  const targetEdgeToWindowEdge = {\n    x: windowCenter.x - targetHalfWidth,\n    y: windowCenter.y - targetHalfHeight\n  }\n\n  const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n  const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n  // The additional scale is based on the smaller value of\n  // scaling horizontally and scaling vertically\n  return scaleBase + Math.min(scaleHorizontally, scaleVertically)\n}\n\nexport {\n  sniffTransition,\n  checkTrans,\n  calculateTranslate,\n  calculateScale\n}\n","import options from './_options'\n\nconst TOUCH_SCALE_FACTOR = 2\n\nconst processTouches = (touches, cb) => {\n  const total = touches.length\n  const firstTouch = touches[0]\n  const multitouch = total > 1\n\n  let scaleExtra = options.scaleExtra\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (!multitouch) continue\n\n    if (x < min.x) {\n      min.x = x\n    } else if (x > max.x) {\n      max.x = x\n    }\n\n    if (y < min.y) {\n      min.y = y\n    } else if (y > max.y) {\n      max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      scaleExtra = (distX / window.innerWidth) * TOUCH_SCALE_FACTOR\n    } else {\n      scaleExtra = (distY / window.innerHeight) * TOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total, scaleExtra)\n}\n\nexport {\n  processTouches\n}\n"],"names":["Zooming","options","defaultOptions","Object","assign","body","document","overlay","createElement","target","parent","shown","lock","released","lastScrollPosition","translate","scale","srcThumbnail","pressTimer","trans","sniffTransition","this","setStyleHelper","checkTrans","transitionProp","transformProp","transformCssProp","transEndEvent","setStyle","el","styles","remember","eventHandler","style","init","addEventListener","_this","close","docElm","documentElement","webkitPrefix","divide","denominator","numerator","half","loadImage","url","cb","img","Image","onload","src","scrollTop","window","pageYOffset","parentNode","getWindowCenter","docWidth","clientWidth","docHeight","clientHeight","toggleListeners","types","handler","add","forEach","t","removeEventListener","bgColor","transitionDuration","transitionTimingFunction","ret","tform","end","some","undefined","prop","replace","value","transition","transform","s","original","key","calculateTranslate","rect","windowCenter","targetCenter","left","width","top","height","x","y","calculateScale","scaleBase","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","Math","min","TOUCH_SCALE_FACTOR","processTouches","touches","total","length","firstTouch","multitouch","scaleExtra","i","xs","ys","clientX","clientY","max","distX","distY","innerWidth","innerHeight","PRESS_DELAY","EVENT_TYPES_GRAB","prototype","e","preventDefault","release","open","currentTarget","st","deltaY","abs","scrollThreshold","code","keyCode","_this2","button","setTimeout","grab","move","targetTouches","fn","bind","els","querySelectorAll","listen","tagName","cursor","zoomIn","click","preloadImage","hasAttribute","getAttribute","onOpen","querySelector","onBeforeOpen","getBoundingClientRect","offsetWidth","enableGrab","zoomOut","appendChild","_this6","opacity","bgOpacity","scroll","keydown","onEnd","dataOriginal","temp","cloneNode","setAttribute","position","visibility","removeChild","onClose","onBeforeClose","default","_this7","onBeforeGrab","dx","dy","_this8","onBeforeMove","_this9","onRelease","onBeforeRelease","_this10","opts","defaultZoomable"],"mappings":"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"}